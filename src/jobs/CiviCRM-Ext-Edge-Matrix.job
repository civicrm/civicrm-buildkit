#!/usr/bin/env bash
set -e

## Example usage:
##
## $ env CIVIVER=master EXTKEY=nz.co.fuzion.extendedreport BUILDTYPE=normal run-bknix-job --mock edge CiviCRM-Ext-Edge-Matrix

#################################################
## Environment variables

PHPUNIT=${PHPUNIT:-phpunit8}
assert_common EXECUTOR_NUMBER WORKSPACE CIVIVER PHPUNIT

## EXTKEY: The name of the extension to test. Ex: uk.co.vedaconsulting.mosaico
assert_regex '^[0-9a-z\.-]\+$' "$EXTKEY" "Missing or invalid EXTKEY"

## BUILDTYPE: How to get the extension. Ex: "git" or "normal"
assert_regex '^[0-9a-z\.-]\+$' "$BUILDTYPE" "Missing or invalid BUILDTYPE"

#################################################
## Main

assert_bknix_temporary

BLDNAME="build-$EXECUTOR_NUMBER"
BLDDIR="$BKITBLD/$BLDNAME/web"
EXTBASE="$BLDDIR/sites/all/modules/civicrm/ext"
EXITCODE=0

##################################################
## Resolve metadata for this extension
case "$EXTKEY" in
  nz.co.fuzion.extendedreport)
    EXTGITS="https://github.com/eileenmcnaughton/nz.co.fuzion.extendedreport"
    EXTS="nz.co.fuzion.extendedreport"
    ;;
  com.iatspayments.civicrm)
    EXTGITS="https://github.com/iATSPayments/com.iatspayments.civicrm"
    EXTS="com.iatspayments.civicrm"
    ;;
  org.civicrm.flexmailer)
    EXTGITS="https://github.com/civicrm/org.civicrm.flexmailer"
    EXTS="org.civicrm.flexmailer"
    ;;
  org.civicrm.api4)
    EXTGITS="https://github.com/civicrm/org.civicrm.shoreditch https://github.com/civicrm/api4"
    EXTS="org.civicrm.shoreditch org.civicrm.api4"
    ;;
  uk.co.vedaconsulting.mosaico)
    EXTGITS="https://github.com/veda-consulting/uk.co.vedaconsulting.mosaico"
    EXTS="uk.co.vedaconsulting.mosaico"
    ;;
  org.civicoop.civirules)
    #EXTGITS="https://github.com/civicoop/org.civicoop.civirules"
    EXTGITS="https://lab.civicrm.org/extensions/civirules"
    EXTS="org.civicoop.civirules"
    ;;
  de.systopia.eck)
    EXTGITS="https://github.com/systopia/de.systopia.eck"
    EXTS="de.systopia.eck:"
    ;;
  *)
    echo "Unrecognized extension key: $EXTKEY"
    exit 1
    ;;
esac

## APIv4 has been merged into core since 5.19
if [ $EXTKEY == "org.civicrm.api4" ]; then
  case "$CIVIVER" in
    5.18|5.13)
     ;;
    *)
	 echo "APIv4 Extension tests are disabled from 5.19 onwards"
     exit 0
     ;;
  esac
fi

##################################################
## Reset (cleanup after previous tests)
clean_legacy_workspace "$WORKSPACE/junit" "$WORKSPACE/civibuild-html" "$WORKSPACE/last-scan.json" "$WORKSPACE/new-scan.json"
init_std_workspace
if [ -d "$BLDDIR" ]; then
  echo y | civibuild destroy "$BLDNAME"
fi

## Report details about the test environment
civibuild env-info

## Download application (with civibuild)
civibuild download "$BLDNAME" \
  --civi-ver "$CIVIVER" \
  --type "drupal-clean"
mkdir -p "$EXTBASE"
pushd "$BLDDIR/sites/all/modules/civicrm"
EXTCIVIVER=$( php -r '$x=simplexml_load_file("xml/version.xml"); echo $x->version_no;' )
popd
pushd "$EXTBASE"
  if [ $BUILDTYPE == "git" ]; then
    for EXTGIT in $EXTGITS ; do
      ## NOTE: api4 may already exist in some build-types, so tread gently with it
      if [ $EXTGIT = "https://github.com/civicrm/api4" ]; then
        if [ -d "api4" ]; then
          cd api4
          git checkout master && git pull && cd ../
        else
          git clone "$EXTGIT"
        fi
      else
        git clone "$EXTGIT"
      fi
      EXTGITDIR=$(basename "$EXTGIT")
      if [ -f "$EXTGITDIR/bin/setup.sh" ]; then
        pushd "$EXTGITDIR"
          ./bin/setup.sh -D
        popd
      fi
    done
  else
    for EXT in $EXTS ; do
      cv dl -b "@https://civicrm.org/extdir/ver=$EXTCIVIVER|cms=Drupal|status=|ready=/$EXT.xml" --to="$EXTBASE/$EXT" --dev
      EXTDIR=$(basename "$EXT")
      #if [ -f "$EXTDIR/bin/setup.sh" ]; then
        #pushd "$EXTDIR"
          #chmod +x ./bin/setup.sh
          #./bin/setup.sh -D
        #popd
      #fi
    done
  fi
popd

## Install application (with civibuild)
civibuild install "$BLDNAME" \
  --admin-pass "n0ts3cr3t"

## Report details about this build of the application
civibuild show "$BLDNAME" \
  --html "$WORKSPACE_HTML" \
  --last-scan "$WORKSPACE_BUILD/last-scan.json" \
  --new-scan "$WORKSPACE_BUILD/new-scan.json"
cp "$WORKSPACE_BUILD/new-scan.json" "$WORKSPACE_BUILD/last-scan.json"

## Run the tests
pushd "$EXTBASE"
  if [ $BUILDTYPE = "git" ]; then
    EXTDIR=$(basename "$EXTGIT")
  else
    EXTDIR=$(basename "$EXT")
  fi
  pushd "$EXTDIR"
    civibuild restore "$BLDNAME"
    cv en "$EXTKEY"
 if [ $BUILDTYPE != "git" ]; then
   if [ "$BKPROF" != "max" ]; then
      if [ "$EXTKEY" != "uk.co.vedaconsulting.mosaico" ]; then
        true
      else
         xphpunit --tap --group e2e --log-junit="$WORKSPACE_JUNIT/junit-e2e.xml"
       fi
      xphpunit --tap --group headless --log-junit="$WORKSPACE_JUNIT/junit-headless.xml"
    else
      if [ "$EXTKEY" == "uk.co.vedaconsulting.mosaico" ]; then
        true
      else
        xphpunit --tap --group e2e --log-junit="$WORKSPACE_JUNIT/junit-e2e.xml"
      fi
      xphpunit --tap --group headless --log-junit="$WORKSPACE_JUNIT/junit-headless.xml"
    fi
 else
   if [ "$EXTKEY" != "uk.co.vedaconsulting.mosaico" ]; then
     true
   else
     xphpunit --tap --group e2e --log-junit="$WORKSPACE_JUNIT/junit-e2e.xml"
   fi
   xphpunit --tap --group headless --log-junit="$WORKSPACE_JUNIT/junit-headless.xml"
  fi
    EXITCODE=$(($? || $EXITCODE))
  popd
popd

phpunit-xml-cleanup "$WORKSPACE_JUNIT/"/*.xml

## Report test results
# Jenkins should be configured to read JUnit XML from $WORKSPACE_JUNIT
exit $EXITCODE
